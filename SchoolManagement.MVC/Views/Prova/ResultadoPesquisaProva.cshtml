@model IEnumerable<SchoolManagement.MVC.ViewModels.ProvaViewModel>

@{
    ViewBag.Title = "Resultado de filtro - Prova";
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Prova
            <small>Resultado de filtro - Prova</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Prova</li>
            <li class="active">Resultado de filtro - Prova</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <!-- left column -->
            <div class="col-md-12">
                <div class="box box-default">
                    <div class="box-header with-border">
                        <h3 class="box-title">Resultado de filtro - Prova</h3>
                    </div><!-- /.box-header -->
                    <div class="box-body">

                        <table class="table">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.DataProva)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Disciplina)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Professores)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.StatusProva)
                                </th>

                                
                                <th></th>
                            </tr>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DataProva)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Disciplina.NomeDisciplina)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Professores.Nome)
                                    </td>
                                    <td>
                                        @Html.DisplayName(RecuperarValorStatusProva((int)item.StatusProva))
                                    </td>

                                    <td>
                                        @Html.ActionLink("Editar", "Edit", new { id = item.ProvaId }) |
                                        @Html.ActionLink("Detalhes", "Details", new { id = item.ProvaId }) |
                                        @Html.ActionLink("Deletar", "Delete", new { id = item.ProvaId })
                                    </td>
                                </tr>
                            }

                        </table>
                    </div><!-- /.box-body -->
                </div>
            </div><!--/.col (left) -->
            <!-- right column -->
        </div>   <!-- /.row -->
    </section><!-- /.content -->
</div><!-- /.content-wrapper -->

@functions{
    private string RecuperarValorStatusProva(int status)
    {
        string result = string.Empty;
        switch (status)
        {
            case 1:
                result = "Pendente";
                break;
            case 2:
                result = "Concluída";
                break;
            default:
                break;
        }
        return result;
    }
}