@*@model SchoolManagement.MVC.ViewModels.UsuarioViewModel

@{
    ViewBag.Title = "Create";

}

@section Scripts {
    @Scripts.Render("~/AvaCaronaUsuario/js")
}



<script type="text/javascript" src="0 - Apresentacao/Content/javascriptvalidacao.js"></script>
<script type="text/javascript" src="http://cidades-estados-js.googlecode.com/files/cidades-estados-v0.2.js"></script>
<script src="//cdn.jsdelivr.net/webshim/1.14.5/polyfiller.js"></script>
<script>
    // Data funcionar em IE
    webshims.setOptions('forms-ext', { types: 'date' });
    webshims.polyfill('forms forms-ext');
    // estado e cidade
    window.onload = function () {
        new dgCidadesEstados(document.getElementById('estado'), document.getElementById('cidade'), true);
    }

</script>

<h2>Create</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UsuarioViewModel</h4>
        <hr />
        @Html.ValidationSummary(true)



        <div class="form-group">
            @Html.LabelFor(model => model.NomeCompleto, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeCompleto)
                @Html.ValidationMessageFor(model => model.NomeCompleto)
                <br />
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Estado, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="estado" name="estado" class="fundo"></select>
                @Html.ValidationMessageFor(model => model.Estado)
            </div>
            <br />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="cidade" name="cidade" class="fundo"></select>
                @Html.ValidationMessageFor(model => model.Cidade)
            </div>
            <br />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rua, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rua)
                @Html.ValidationMessageFor(model => model.Rua)
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Numero, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Numero)
                @Html.ValidationMessageFor(model => model.Numero)
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bairro, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bairro)
                @Html.ValidationMessageFor(model => model.Bairro)
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cep, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="CEP" id="idCep" onkeypress="mascaraCep()" maxlength="9" />
                @Html.ValidationMessageFor(model => model.Cep)<br />
            </div>
        </div>*@


        @*<div class="form-group">
            @Html.LabelFor(model => model.UserLogin, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserLogin)
                @Html.ValidationMessageFor(model => model.UserLogin)
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Senha, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="password" id="senha" name="senha" required title="Senha fraca" />
                @Html.ValidationMessageFor(model => model.Senha)<br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmarSenha, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="password" name="confirmarSenha" id="confirmarSenha" required />
                @Html.ValidationMessageFor(model => model.ConfirmarSenha)<br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="dataNascimento">
                @Html.ValidationMessageFor(model => model.DataNascimento)<br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="sexo">
                    <option id="MASCULINO" value="masculino">Masculino</option>
                    <option id="FEMININO" value="feminino">Feminino</option>
                </select>
                @Html.ValidationMessageFor(model => model.Sexo)
                <br />
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Empresa, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Empresa)
                @Html.ValidationMessageFor(model => model.Empresa)
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="email" name="Email" id="Email" required />
                @Html.ValidationMessageFor(model => model.Email)<br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="telefone" id="idTelefone" maxlength="13" onkeypress="mascaraTelefone()" required />
                @Html.ValidationMessageFor(model => model.Telefone)
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Celular, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="celular" id="idCelular" maxlength="13" onkeypress="mascaraCelular()" required />
                @Html.ValidationMessageFor(model => model.Celular)
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pid, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pid)
                @Html.ValidationMessageFor(model => model.Pid)
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocalEmpresa, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocalEmpresa)
                @Html.ValidationMessageFor(model => model.LocalEmpresa)
                <br />
            </div>
        </div>*@

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="return validarSenha()" />
            </div>
        </div>
    </div>
}*@

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

